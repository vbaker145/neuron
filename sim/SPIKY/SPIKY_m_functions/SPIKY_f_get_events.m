% This function detects discrete events in continuous data.

function [events,e_para]=SPIKY_f_get_events(data,e_para)

eventnr     = [    1        2        3        4        5        6        7        8        9       10    ...
        11       12       13       14       15       16       17       18       19       20   ];
eventvalue  = [   -1        1       -3        3       -5        5       -8        8      -10       10    ...
        -11       11      -13       13      -15       15      -18       18      -20       20   ];
eventpre    = [    1        1        3        3        5        5        8        8       10       10    ...  % time samples before events
        1        1        3        3        5        5        8        8       10       10   ];    % K
eventpost   = [    1        1        3        3        5        5        8        8       10       10    ...  % time samples after events
        1        1        3        3        5        5        8        8       10       10   ];
eventlinew  = [    1        1        1        1        1        1        1        1        1        1    ...  % line width 
        1        1        1        1        1        1        1        1        1        1   ];
eventcol    = [   'b'  ;   'r'  ;   'b'  ;   'r'  ;   'b'  ;   'r'  ;   'b'  ;   'r'  ;   'b'  ;   'r'  ;...
        'b'  ;   'r'  ;   'b'  ;   'r'  ;   'b'  ;   'r'  ;   'b'  ;   'r'  ;   'b'  ;   'r'  ];
eventname   = [' 1-min';' 1-max';' 3-min';' 3-max';' 5-min';' 5-max';' 8-min';' 8-max';'10-min';'10-max';...
        ' 1-min';' 1-max';' 3-min';' 3-max';' 5-min';' 5-max';' 8-min';' 8-max';'10-min';'10-max'];
eventlength = eventpre+1+eventpost;
% eventmaxdist(1:10)=eventpost(1:10)+eventpre(1:10)-1;                      % 2*K-1
eventmaxdist(1:10)=(eventpost(1:10)+eventpre(1:10))/2-1;                    % 2*K-1
% eventmaxdist(11:20)=eventpost(11:20);                                     % K
eventmaxdist(11:20)=min([eventpre(11:20); eventpost(11:20)])-1;             % K

num_channels=size(data,1);
num_data=size(data,2);
if e_para.event_type==1             % min
    sel_events=2*e_para.min_window-1;
    evh=e_para.min_elevation;
elseif e_para.event_type==2         % max
    sel_events=2*e_para.max_window;
    evh=e_para.max_elevation;
elseif e_para.event_type==3         % threshold crossing
    if e_para.tc_upwards>0
        sel_events=31;  % upward
    else
        sel_events=32;  % downward
    end
end
num_events=1;

if e_para.event_type<3
    eventvalue=eventvalue(sel_events);
    eventpre=eventpre(sel_events);
    eventpost=eventpost(sel_events);

    e_para.eventnr=eventnr(sel_events);
    e_para.eventlinew=eventlinew(sel_events);
    e_para.eventcol=eventcol(sel_events);
    e_para.eventname=eventname(sel_events,:);
    e_para.eventlength=eventlength(sel_events);
    e_para.eventmaxdist=eventmaxdist(sel_events);
    
    e_para.event_precol=ceil(e_para.eventmaxdist/2);
    e_para.event_postcol=ceil(e_para.eventmaxdist/2);
    
    e_para.event_precol=min([3 eventpre(1)])*ones(1,num_events);
    e_para.event_postcol=min([3 eventpost(1)])*ones(1,num_events);
else
    eventvalue=1;
    eventpre=1;
end

if e_para.movave==1
   data_ma=SPIKY_f_moving_average_para(data,e_para.movave_order);
else
   data_ma=data;
end
edmastd=mean(std(data_ma,0,2));
%																															fill event matrix
events=zeros(num_channels,num_data);
for ec=1:num_events
   switch sel_events(ec)
   case 1                                                                                    				   % 1-min
      i0=eventpre(ec)+1:num_data-eventpost(ec);
      ip1=i0+1; im1=i0-1;
      events=events+[zeros(num_channels,eventpre(ec)),eventvalue(ec)*(...
            data_ma(:,i0) <data_ma(:,im1)-evh*edmastd & data_ma(:,i0) <data_ma(:,ip1)-evh*edmastd),...
            zeros(num_channels,eventpost(ec))];
   case 2                                                                                    				   % 1-max
      i0=eventpre(ec)+1:num_data-eventpost(ec);
      ip1=i0+1; im1=i0-1;
      events=events+[zeros(num_channels,eventpre(ec)),eventvalue(ec)*(...
            data_ma(:,i0) >data_ma(:,im1)+evh*edmastd & data_ma(:,i0) >data_ma(:,ip1)+evh*edmastd),...
            zeros(num_channels,eventpost(ec))];
   case 3                                                                                   				   % 3-min
      i0=eventpre(ec)+1:num_data-eventpost(ec);
      ip1=i0+1; im1=i0-1;
      ip2=i0+2; im2=i0-2;
      ip3=i0+3; im3=i0-3;
      events=events+[zeros(num_channels,eventpre(ec)),eventvalue(ec)*(...
            data_ma(:,i0) <data_ma(:,im1) & data_ma(:,i0) <data_ma(:,ip1) &...
            data_ma(:,im1)<data_ma(:,im2) & data_ma(:,ip1)<data_ma(:,ip2) &...
            data_ma(:,im2)<data_ma(:,im3) & data_ma(:,ip2)<data_ma(:,ip3) &...
            data_ma(:,i0) <data_ma(:,im3)-evh*edmastd & data_ma(:,i0) <data_ma(:,ip3)-evh*edmastd),...
            zeros(num_channels,eventpost(ec))];
   case 4                                                                                    				   % 3-max
      i0=eventpre(ec)+1:num_data-eventpost(ec);
      ip1=i0+1; im1=i0-1;
      ip2=i0+2; im2=i0-2;
      ip3=i0+3; im3=i0-3;
      events=events+[zeros(num_channels,eventpre(ec)),eventvalue(ec)*(...
            data_ma(:,i0) >data_ma(:,im1) & data_ma(:,i0) >data_ma(:,ip1) &...
            data_ma(:,im1)>data_ma(:,im2) & data_ma(:,ip1)>data_ma(:,ip2) &...
            data_ma(:,im2)>data_ma(:,im3) & data_ma(:,ip2)>data_ma(:,ip3) &...
            data_ma(:,i0) >data_ma(:,im3)+evh*edmastd & data_ma(:,i0) >data_ma(:,ip3)+evh*edmastd),...
            zeros(num_channels,eventpost(ec))];
   case 5                                                                                     				  % 5-min
      i0=eventpre(ec)+1:num_data-eventpost(ec);
      ip1=i0+1; im1=i0-1;
      ip2=i0+2; im2=i0-2;
      ip3=i0+3; im3=i0-3;
      ip4=i0+4; im4=i0-4;
      ip5=i0+5; im5=i0-5;
      events=events+[zeros(num_channels,eventpre(ec)),eventvalue(ec)*(...
            data_ma(:,i0) <data_ma(:,im1) & data_ma(:,i0) <data_ma(:,ip1) &...
            data_ma(:,im1)<data_ma(:,im2) & data_ma(:,ip1)<data_ma(:,ip2) &...
            data_ma(:,im2)<data_ma(:,im3) & data_ma(:,ip2)<data_ma(:,ip3) &...
            data_ma(:,im3)<data_ma(:,im4) & data_ma(:,ip3)<data_ma(:,ip4) &...
            data_ma(:,im4)<data_ma(:,im5) & data_ma(:,ip4)<data_ma(:,ip5) &...
            data_ma(:,i0) <data_ma(:,im5)-evh*edmastd & data_ma(:,i0) <data_ma(:,ip5)-evh*edmastd),...
            zeros(num_channels,eventpost(ec))];
   case 6                                                                                    				   % 5-max
      i0=eventpre(ec)+1:num_data-eventpost(ec);
      ip1=i0+1; im1=i0-1;
      ip2=i0+2; im2=i0-2;
      ip3=i0+3; im3=i0-3;
      ip4=i0+4; im4=i0-4;
      ip5=i0+5; im5=i0-5;
      events=events+[zeros(num_channels,eventpre(ec)),eventvalue(ec)*(...
            data_ma(:,i0) >data_ma(:,im1) & data_ma(:,i0) >data_ma(:,ip1) &...
            data_ma(:,im1)>data_ma(:,im2) & data_ma(:,ip1)>data_ma(:,ip2) &...
            data_ma(:,im2)>data_ma(:,im3) & data_ma(:,ip2)>data_ma(:,ip3) &...
            data_ma(:,im3)>data_ma(:,im4) & data_ma(:,ip3)>data_ma(:,ip4) &...
            data_ma(:,im4)>data_ma(:,im5) & data_ma(:,ip4)>data_ma(:,ip5) &...
            data_ma(:,i0) >data_ma(:,im5)+evh*edmastd & data_ma(:,i0) >data_ma(:,ip5)+evh*edmastd),...
            zeros(num_channels,eventpost(ec))];
   case 7                                                                                					   % 8-min
      i0=eventpre(ec)+1:num_data-eventpost(ec);
      ip1=i0+1; im1=i0-1;
      ip2=i0+2; im2=i0-2;
      ip3=i0+3; im3=i0-3;
      ip4=i0+4; im4=i0-4;
      ip5=i0+5; im5=i0-5;
      ip6=i0+6; im6=i0-6;
      ip7=i0+7; im7=i0-7;
      ip8=i0+8; im8=i0-8;
      events=events+[zeros(num_channels,eventpre(ec)),eventvalue(ec)*(...
            data_ma(:,i0) <data_ma(:,im1) & data_ma(:,i0) <data_ma(:,ip1) &...
            data_ma(:,im1)<data_ma(:,im2) & data_ma(:,ip1)<data_ma(:,ip2) &...
            data_ma(:,im2)<data_ma(:,im3) & data_ma(:,ip2)<data_ma(:,ip3) &...
            data_ma(:,im3)<data_ma(:,im4) & data_ma(:,ip3)<data_ma(:,ip4) &...
            data_ma(:,im4)<data_ma(:,im5) & data_ma(:,ip4)<data_ma(:,ip5) &...
            data_ma(:,im5)<data_ma(:,im6) & data_ma(:,ip5)<data_ma(:,ip6) &...
            data_ma(:,im6)<data_ma(:,im7) & data_ma(:,ip6)<data_ma(:,ip7) &...
            data_ma(:,im7)<data_ma(:,im8) & data_ma(:,ip7)<data_ma(:,ip8) &...
            data_ma(:,i0) <data_ma(:,im8)-evh*edmastd & data_ma(:,i0) <data_ma(:,ip8)-evh*edmastd),...
            zeros(num_channels,eventpost(ec))];
   case 8                                                                                      				 % 8-max
      i0=eventpre(ec)+1:num_data-eventpost(ec);
      ip1=i0+1; im1=i0-1;
      ip2=i0+2; im2=i0-2;
      ip3=i0+3; im3=i0-3;
      ip4=i0+4; im4=i0-4;
      ip5=i0+5; im5=i0-5;
      ip6=i0+6; im6=i0-6;
      ip7=i0+7; im7=i0-7;
      ip8=i0+8; im8=i0-8;
      events=events+[zeros(num_channels,eventpre(ec)),eventvalue(ec)*(...
            data_ma(:,i0) >data_ma(:,im1) & data_ma(:,i0) >data_ma(:,ip1) &...
            data_ma(:,im1)>data_ma(:,im2) & data_ma(:,ip1)>data_ma(:,ip2) &...
            data_ma(:,im2)>data_ma(:,im3) & data_ma(:,ip2)>data_ma(:,ip3) &...
            data_ma(:,im3)>data_ma(:,im4) & data_ma(:,ip3)>data_ma(:,ip4) &...
            data_ma(:,im4)>data_ma(:,im5) & data_ma(:,ip4)>data_ma(:,ip5) &...
            data_ma(:,im5)>data_ma(:,im6) & data_ma(:,ip5)>data_ma(:,ip6) &...
            data_ma(:,im6)>data_ma(:,im7) & data_ma(:,ip6)>data_ma(:,ip7) &...
            data_ma(:,im7)>data_ma(:,im8) & data_ma(:,ip7)>data_ma(:,ip8) &...
            data_ma(:,i0) >data_ma(:,im8)+evh*edmastd & data_ma(:,i0) >data_ma(:,ip8)+evh*edmastd),...
            zeros(num_channels,eventpost(ec))];
   case 9                                                                         					          % 10-min
      i0=eventpre(ec)+1:num_data-eventpost(ec);
      ip1=i0+1; im1=i0-1;
      ip2=i0+2; im2=i0-2;
      ip3=i0+3; im3=i0-3;
      ip4=i0+4; im4=i0-4;
      ip5=i0+5; im5=i0-5;
      ip6=i0+6; im6=i0-6;
      ip7=i0+7; im7=i0-7;
      ip8=i0+8; im8=i0-8;
      ip9=i0+9; im9=i0-9;
      ip10=i0+10; im10=i0-10;
      events=events+[zeros(num_channels,eventpre(ec)),eventvalue(ec)*(...
            data_ma(:,i0) <data_ma(:,im1) & data_ma(:,i0) <data_ma(:,ip1) &...
            data_ma(:,im1)<data_ma(:,im2) & data_ma(:,ip1)<data_ma(:,ip2) &...
            data_ma(:,im2)<data_ma(:,im3) & data_ma(:,ip2)<data_ma(:,ip3) &...
            data_ma(:,im3)<data_ma(:,im4) & data_ma(:,ip3)<data_ma(:,ip4) &...
            data_ma(:,im4)<data_ma(:,im5) & data_ma(:,ip4)<data_ma(:,ip5) &...
            data_ma(:,im5)<data_ma(:,im6) & data_ma(:,ip5)<data_ma(:,ip6) &...
            data_ma(:,im6)<data_ma(:,im7) & data_ma(:,ip6)<data_ma(:,ip7) &...
            data_ma(:,im7)<data_ma(:,im8) & data_ma(:,ip7)<data_ma(:,ip8) &...
            data_ma(:,im8)<data_ma(:,im9) & data_ma(:,ip8)<data_ma(:,ip9) &...
            data_ma(:,im9)<data_ma(:,im10) & data_ma(:,ip9)<data_ma(:,ip10) &...
            data_ma(:,i0) <data_ma(:,im10)-evh*edmastd & data_ma(:,i0) <data_ma(:,ip10)-evh*edmastd),...
            zeros(num_channels,eventpost(ec))];
   case 10                                                                                     				 % 10-max
      i0=eventpre(ec)+1:num_data-eventpost(ec);
      ip1=i0+1; im1=i0-1;
      ip2=i0+2; im2=i0-2;
      ip3=i0+3; im3=i0-3;
      ip4=i0+4; im4=i0-4;
      ip5=i0+5; im5=i0-5;
      ip6=i0+6; im6=i0-6;
      ip7=i0+7; im7=i0-7;
      ip8=i0+8; im8=i0-8;
      ip9=i0+9; im9=i0-9;
      ip10=i0+10; im10=i0-10;
      events=events+[zeros(num_channels,eventpre(ec)),eventvalue(ec)*(...
            data_ma(:,i0) >data_ma(:,im1) & data_ma(:,i0) >data_ma(:,ip1) &...
            data_ma(:,im1)>data_ma(:,im2) & data_ma(:,ip1)>data_ma(:,ip2) &...
            data_ma(:,im2)>data_ma(:,im3) & data_ma(:,ip2)>data_ma(:,ip3) &...
            data_ma(:,im3)>data_ma(:,im4) & data_ma(:,ip3)>data_ma(:,ip4) &...
            data_ma(:,im4)>data_ma(:,im5) & data_ma(:,ip4)>data_ma(:,ip5) &...
            data_ma(:,im5)>data_ma(:,im6) & data_ma(:,ip5)>data_ma(:,ip6) &...
            data_ma(:,im6)>data_ma(:,im7) & data_ma(:,ip6)>data_ma(:,ip7) &...
            data_ma(:,im7)>data_ma(:,im8) & data_ma(:,ip7)>data_ma(:,ip8) &...
            data_ma(:,im8)>data_ma(:,im9) & data_ma(:,ip8)>data_ma(:,ip9) &...
            data_ma(:,im9)>data_ma(:,im10) & data_ma(:,ip9)>data_ma(:,ip10) &...
            data_ma(:,i0) >data_ma(:,im10)+evh*edmastd & data_ma(:,i0) >data_ma(:,ip10)+evh*edmastd),...
            zeros(num_channels,eventpost(ec))];
   case 11                                                                         					            	  % 1-min II
      i0=eventpre(ec)+1:num_data-eventpost(ec);
      ip1=i0+1; im1=i0-1;
      events=events+[zeros(num_channels,eventpre(ec)),eventvalue(ec)*(...
            data_ma(:,i0)<data_ma(:,im1)-evh*edmastd & data_ma(:,i0)<data_ma(:,ip1)-evh*edmastd),...
            zeros(num_channels,eventpost(ec))];
   case 12                                                                         					            	  % 1-max II
      i0=eventpre(ec)+1:num_data-eventpost(ec);
      ip1=i0+1; im1=i0-1;
      events=events+[zeros(num_channels,eventpre(ec)),eventvalue(ec)*(...
            data_ma(:,i0)>data_ma(:,im1)+evh*edmastd & data_ma(:,i0)>data_ma(:,ip1)+evh*edmastd),...
            zeros(num_channels,eventpost(ec))];
   case 13                                                                         					            	  % 3-min II
      i0=eventpre(ec)+1:num_data-eventpost(ec);
      ip1=i0+1; im1=i0-1;
      ip2=i0+2; im2=i0-2;
      ip3=i0+3; im3=i0-3;
      events=events+[zeros(num_channels,eventpre(ec)),eventvalue(ec)*(...
            data_ma(:,i0)<data_ma(:,im1) & data_ma(:,i0) <data_ma(:,ip1) &...
            data_ma(:,i0)<data_ma(:,im2) & data_ma(:,i0)<data_ma(:,ip2) &...
            data_ma(:,i0)<data_ma(:,im3)-evh*edmastd & data_ma(:,i0)<data_ma(:,ip3)-evh*edmastd),...
            zeros(num_channels,eventpost(ec))];
   case 14                                                                         					            	  % 3-max II
      i0=eventpre(ec)+1:num_data-eventpost(ec);
      ip1=i0+1; im1=i0-1;
      ip2=i0+2; im2=i0-2;
      ip3=i0+3; im3=i0-3;
      events=events+[zeros(num_channels,eventpre(ec)),eventvalue(ec)*(...
            data_ma(:,i0)>data_ma(:,im1) & data_ma(:,i0)>data_ma(:,ip1) &...
            data_ma(:,i0)>data_ma(:,im2) & data_ma(:,i0)>data_ma(:,ip2) &...
            data_ma(:,i0)>data_ma(:,im3)+evh*edmastd & data_ma(:,i0)>data_ma(:,ip3)+evh*edmastd),...
            zeros(num_channels,eventpost(ec))];
   case 15                                                                         					            	  % 5-min II
      i0=eventpre(ec)+1:num_data-eventpost(ec);
      ip1=i0+1; im1=i0-1;
      ip2=i0+2; im2=i0-2;
      ip3=i0+3; im3=i0-3;
      ip4=i0+4; im4=i0-4;
      ip5=i0+5; im5=i0-5;
      events=events+[zeros(num_channels,eventpre(ec)),eventvalue(ec)*(...
            data_ma(:,i0)<data_ma(:,im1) & data_ma(:,i0) <data_ma(:,ip1) &...
            data_ma(:,i0)<data_ma(:,im2) & data_ma(:,i0)<data_ma(:,ip2) &...
            data_ma(:,i0)<data_ma(:,im3) & data_ma(:,i0)<data_ma(:,ip3) &...
            data_ma(:,i0)<data_ma(:,im4) & data_ma(:,i0)<data_ma(:,ip4) &...
            data_ma(:,i0)<data_ma(:,im5)-evh*edmastd & data_ma(:,i0)<data_ma(:,ip5)-evh*edmastd),...
            zeros(num_channels,eventpost(ec))];
   case 16                                                                         					            	  % 5-max II
      i0=eventpre(ec)+1:num_data-eventpost(ec);
      ip1=i0+1; im1=i0-1;
      ip2=i0+2; im2=i0-2;
      ip3=i0+3; im3=i0-3;
      ip4=i0+4; im4=i0-4;
      ip5=i0+5; im5=i0-5;
      events=events+[zeros(num_channels,eventpre(ec)),eventvalue(ec)*(...
            data_ma(:,i0)>data_ma(:,im1) & data_ma(:,i0)>data_ma(:,ip1) &...
            data_ma(:,i0)>data_ma(:,im2) & data_ma(:,i0)>data_ma(:,ip2) &...
            data_ma(:,i0)>data_ma(:,im3) & data_ma(:,i0)>data_ma(:,ip3) &...
            data_ma(:,i0)>data_ma(:,im4) & data_ma(:,i0)>data_ma(:,ip4) &...
            data_ma(:,i0)>data_ma(:,im5)+evh*edmastd & data_ma(:,i0)>data_ma(:,ip5)+evh*edmastd),...
            zeros(num_channels,eventpost(ec))];
   case 17                                                                         					            	  % 8-min II
      i0=eventpre(ec)+1:num_data-eventpost(ec);
      ip1=i0+1; im1=i0-1;
      ip2=i0+2; im2=i0-2;
      ip3=i0+3; im3=i0-3;
      ip4=i0+4; im4=i0-4;
      ip5=i0+5; im5=i0-5;
      ip6=i0+6; im6=i0-6;
      ip7=i0+7; im7=i0-7;
      ip8=i0+8; im8=i0-8;
      events=events+[zeros(num_channels,eventpre(ec)),eventvalue(ec)*(...
            data_ma(:,i0)<data_ma(:,im1) & data_ma(:,i0) <data_ma(:,ip1) &...
            data_ma(:,i0)<data_ma(:,im2) & data_ma(:,i0)<data_ma(:,ip2) &...
            data_ma(:,i0)<data_ma(:,im3) & data_ma(:,i0)<data_ma(:,ip3) &...
            data_ma(:,i0)<data_ma(:,im4) & data_ma(:,i0)<data_ma(:,ip4) &...
            data_ma(:,i0)<data_ma(:,im5) & data_ma(:,i0)<data_ma(:,ip5) &...
            data_ma(:,i0)<data_ma(:,im6) & data_ma(:,i0)<data_ma(:,ip6) &...
            data_ma(:,i0)<data_ma(:,im7) & data_ma(:,i0)<data_ma(:,ip7) &...
            data_ma(:,i0)<data_ma(:,im8)-evh*edmastd & data_ma(:,i0)<data_ma(:,ip8)-evh*edmastd),...
            zeros(num_channels,eventpost(ec))];
   case 18                                                                         					            	  % 8-max II
      i0=eventpre(ec)+1:num_data-eventpost(ec);
      ip1=i0+1; im1=i0-1;
      ip2=i0+2; im2=i0-2;
      ip3=i0+3; im3=i0-3;
      ip4=i0+4; im4=i0-4;
      ip5=i0+5; im5=i0-5;
      ip6=i0+6; im6=i0-6;
      ip7=i0+7; im7=i0-7;
      ip8=i0+8; im8=i0-8;
      events=events+[zeros(num_channels,eventpre(ec)),eventvalue(ec)*(...
            data_ma(:,i0)>data_ma(:,im1) & data_ma(:,i0)>data_ma(:,ip1) &...
            data_ma(:,i0)>data_ma(:,im2) & data_ma(:,i0)>data_ma(:,ip2) &...
            data_ma(:,i0)>data_ma(:,im3) & data_ma(:,i0)>data_ma(:,ip3) &...
            data_ma(:,i0)>data_ma(:,im4) & data_ma(:,i0)>data_ma(:,ip4) &...
            data_ma(:,i0)>data_ma(:,im5) & data_ma(:,i0)>data_ma(:,ip5) &...
            data_ma(:,i0)>data_ma(:,im6) & data_ma(:,i0)>data_ma(:,ip6) &...
            data_ma(:,i0)>data_ma(:,im7) & data_ma(:,i0)>data_ma(:,ip7) &...
            data_ma(:,i0)>data_ma(:,im8)+evh*edmastd & data_ma(:,i0)>data_ma(:,ip8)+evh*edmastd),...
            zeros(num_channels,eventpost(ec))];
   case 19                                                                         					            	  % 10-min II
      i0=eventpre(ec)+1:num_data-eventpost(ec);
      ip1=i0+1; im1=i0-1;
      ip2=i0+2; im2=i0-2;
      ip3=i0+3; im3=i0-3;
      ip4=i0+4; im4=i0-4;
      ip5=i0+5; im5=i0-5;
      ip6=i0+6; im6=i0-6;
      ip7=i0+7; im7=i0-7;
      ip8=i0+8; im8=i0-8;
      ip9=i0+9; im9=i0-9;
      ip10=i0+10; im10=i0-10;
      events=events+[zeros(num_channels,eventpre(ec)),eventvalue(ec)*(...
            data_ma(:,i0) <data_ma(:,im1) & data_ma(:,i0) <data_ma(:,ip1) &...
            data_ma(:,i0)<data_ma(:,im2) & data_ma(:,i0)<data_ma(:,ip2) &...
            data_ma(:,i0)<data_ma(:,im3) & data_ma(:,i0)<data_ma(:,ip3) &...
            data_ma(:,i0)<data_ma(:,im4) & data_ma(:,i0)<data_ma(:,ip4) &...
            data_ma(:,i0)<data_ma(:,im5) & data_ma(:,i0)<data_ma(:,ip5) &...
            data_ma(:,i0)<data_ma(:,im6) & data_ma(:,i0)<data_ma(:,ip6) &...
            data_ma(:,i0)<data_ma(:,im7) & data_ma(:,i0)<data_ma(:,ip7) &...
            data_ma(:,i0)<data_ma(:,im8) & data_ma(:,i0)<data_ma(:,ip8) &...
            data_ma(:,i0)<data_ma(:,im9) & data_ma(:,i0)<data_ma(:,ip9) &...
            data_ma(:,i0)<data_ma(:,im10)-evh*edmastd & data_ma(:,i0)<data_ma(:,ip10)-evh*edmastd),...
            zeros(num_channels,eventpost(ec))];
   case 20                                                                         					            	  % 10-max II
      i0=eventpre(ec)+1:num_data-eventpost(ec);
      ip1=i0+1; im1=i0-1;
      ip2=i0+2; im2=i0-2;
      ip3=i0+3; im3=i0-3;
      ip4=i0+4; im4=i0-4;
      ip5=i0+5; im5=i0-5;
      ip6=i0+6; im6=i0-6;
      ip7=i0+7; im7=i0-7;
      ip8=i0+8; im8=i0-8;
      ip9=i0+9; im9=i0-9;
      ip10=i0+10; im10=i0-10;
      events=events+[zeros(num_channels,eventpre(ec)),eventvalue(ec)*(...
            data_ma(:,i0)>data_ma(:,im1) & data_ma(:,i0)>data_ma(:,ip1) &...
            data_ma(:,i0)>data_ma(:,im2) & data_ma(:,i0)>data_ma(:,ip2) &...
            data_ma(:,i0)>data_ma(:,im3) & data_ma(:,i0)>data_ma(:,ip3) &...
            data_ma(:,i0)>data_ma(:,im4) & data_ma(:,i0)>data_ma(:,ip4) &...
            data_ma(:,i0)>data_ma(:,im5) & data_ma(:,i0)>data_ma(:,ip5) &...
            data_ma(:,i0)>data_ma(:,im6) & data_ma(:,i0)>data_ma(:,ip6) &...
            data_ma(:,i0)>data_ma(:,im7) & data_ma(:,i0)>data_ma(:,ip7) &...
            data_ma(:,i0)>data_ma(:,im8) & data_ma(:,i0)>data_ma(:,ip8) &...
            data_ma(:,i0)>data_ma(:,im9) & data_ma(:,i0)>data_ma(:,ip9) &...
            data_ma(:,i0)>data_ma(:,im10)+evh*edmastd & data_ma(:,i0)>data_ma(:,ip10)+evh*edmastd),...
            zeros(num_channels,eventpost(ec))];
   case 21                                                                                    				   % 1-min-eq
      i0=eventpre(ec)+1:num_data-eventpost(ec);
      ip1=i0+1; im1=i0-1;
      events=events+[zeros(num_channels,eventpre(ec)),eventvalue(ec)*(...
            data_ma(:,i0) <=data_ma(:,im1)-evh*edmastd & data_ma(:,i0) <data_ma(:,ip1)-evh*edmastd),...
            zeros(num_channels,eventpost(ec))];
   case 22                                                                                    				   % 1-max-eq
      i0=eventpre(ec)+1:num_data-eventpost(ec);
      ip1=i0+1; im1=i0-1;
      events=events+[zeros(num_channels,eventpre(ec)),eventvalue(ec)*(...
            data_ma(:,i0) >=data_ma(:,im1)+evh*edmastd & data_ma(:,i0) >data_ma(:,ip1)+evh*edmastd),...
            zeros(num_channels,eventpost(ec))];
   case 31                                                                                    				   % Threshold crossing (upward)
      i0=eventpre(ec):num_data-eventpost(ec);
      ip1=i0+1;
      events=events+[zeros(num_channels,eventpre(ec)),eventvalue(ec)*(...
            data_ma(:,i0) < e_para.crossthreshold & data_ma(:,ip1) > e_para.crossthreshold)];
   case 32                                                                                    				   % Threshold crossing (downward)
      i0=eventpre(ec):num_data-eventpost(ec);
      ip1=i0+1;
      events=events+[zeros(num_channels,eventpre(ec)),eventvalue(ec)*(...
            data_ma(:,i0) > e_para.crossthreshold & data_ma(:,ip1) < e_para.crossthreshold)];
   end
end
%events=flipud(events);
%if mod(eventplotting,8)>3 evsmat=zeros(num_channels); end
